<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.MailRecordsMapper">
    
    <resultMap type="MailRecords" id="MailRecordsResult">
        <result property="mailId"    column="mail_id"    />
        <result property="templateId"    column="template_id"    />
        <result property="senderId"    column="sender_id"    />
        <result property="senderName"    column="sender_name"    />
        <result property="senderEmail"    column="sender_email"    />
        <result property="subject"    column="subject"    />
        <result property="content"    column="content"    />
        <result property="status"    column="status"    />
        <result property="sendTime"    column="send_time"    />
        <result property="resultInfo"    column="result_info"    />
    </resultMap>

    <resultMap id="MailRecordsMailTemplatesResult" type="MailRecords" extends="MailRecordsResult">
        <collection property="mailTemplatesList" ofType="MailTemplates" column="mail_id" select="selectMailTemplatesList" />
    </resultMap>

    <resultMap type="MailTemplates" id="MailTemplatesResult">
        <result property="templateId"    column="template_id"    />
        <result property="templateCode"    column="template_code"    />
        <result property="subject"    column="subject"    />
        <result property="content"    column="content"    />
        <result property="description"    column="description"    />
        <result property="isActive"    column="is_active"    />
    </resultMap>

    <sql id="selectMailRecordsVo">
        select mail_id, template_id, sender_id, sender_name, sender_email, subject, content, status, send_time, result_info from mail_records
    </sql>

    <select id="selectMailRecordsList" parameterType="MailRecords" resultMap="MailRecordsResult">
        <include refid="selectMailRecordsVo"/>
        <where>  
            <if test="templateId != null "> and template_id = #{templateId}</if>
            <if test="senderName != null  and senderName != ''"> and sender_name like concat('%', #{senderName}, '%')</if>
            <if test="senderEmail != null  and senderEmail != ''"> and sender_email = #{senderEmail}</if>
            <if test="content != null  and content != ''"> and content = #{content}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="sendTime != null "> and send_time = #{sendTime}</if>
            <if test="resultInfo != null  and resultInfo != ''"> and result_info = #{resultInfo}</if>
        </where>
    </select>
    
    <select id="selectMailRecordsByMailId" parameterType="Long" resultMap="MailRecordsMailTemplatesResult">
        select mail_id, template_id, sender_id, sender_name, sender_email, subject, content, status, send_time, result_info
        from mail_records
        where mail_id = #{mailId}
    </select>

    <select id="selectMailTemplatesList" resultMap="MailTemplatesResult">
        select template_id, template_code, subject, content, description, is_active
        from mail_templates
        where template_id = #{template_id}
    </select>

    <insert id="insertMailRecords" parameterType="MailRecords" useGeneratedKeys="true" keyProperty="mailId">
        insert into mail_records
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="templateId != null">template_id,</if>
            <if test="senderId != null">sender_id,</if>
            <if test="senderName != null">sender_name,</if>
            <if test="senderEmail != null and senderEmail != ''">sender_email,</if>
            <if test="subject != null">subject,</if>
            <if test="content != null and content != ''">content,</if>
            <if test="status != null">status,</if>
            <if test="sendTime != null">send_time,</if>
            <if test="resultInfo != null">result_info,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="templateId != null">#{templateId},</if>
            <if test="senderId != null">#{senderId},</if>
            <if test="senderName != null">#{senderName},</if>
            <if test="senderEmail != null and senderEmail != ''">#{senderEmail},</if>
            <if test="subject != null">#{subject},</if>
            <if test="content != null and content != ''">#{content},</if>
            <if test="status != null">#{status},</if>
            <if test="sendTime != null">#{sendTime},</if>
            <if test="resultInfo != null">#{resultInfo},</if>
         </trim>
    </insert>

    <update id="updateMailRecords" parameterType="MailRecords">
        update mail_records
        <trim prefix="SET" suffixOverrides=",">
            <if test="templateId != null">template_id = #{templateId},</if>
            <if test="senderId != null">sender_id = #{senderId},</if>
            <if test="senderName != null">sender_name = #{senderName},</if>
            <if test="senderEmail != null and senderEmail != ''">sender_email = #{senderEmail},</if>
            <if test="subject != null">subject = #{subject},</if>
            <if test="content != null and content != ''">content = #{content},</if>
            <if test="status != null">status = #{status},</if>
            <if test="sendTime != null">send_time = #{sendTime},</if>
            <if test="resultInfo != null">result_info = #{resultInfo},</if>
        </trim>
        where mail_id = #{mailId}
    </update>

    <delete id="deleteMailRecordsByMailId" parameterType="Long">
        delete from mail_records where mail_id = #{mailId}
    </delete>

    <delete id="deleteMailRecordsByMailIds" parameterType="String">
        delete from mail_records where mail_id in 
        <foreach item="mailId" collection="array" open="(" separator="," close=")">
            #{mailId}
        </foreach>
    </delete>
    
    <delete id="deleteMailTemplatesByTemplateIds" parameterType="String">
        delete from mail_templates where template_id in 
        <foreach item="templateId" collection="array" open="(" separator="," close=")">
            #{templateId}
        </foreach>
    </delete>

    <delete id="deleteMailTemplatesByTemplateId" parameterType="Long">
        delete from mail_templates where template_id = #{templateId}
    </delete>

    <insert id="batchMailTemplates">
        insert into mail_templates( template_id, template_code, subject, content, description, is_active) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.templateId}, #{item.templateCode}, #{item.subject}, #{item.content}, #{item.description}, #{item.isActive})
        </foreach>
    </insert>

</mapper>